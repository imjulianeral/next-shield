(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[698],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,f=d["".concat(p,".").concat(m)]||d[m]||c[m]||i;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7711:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var r=n(2122),o=n(9756),i=(n(7294),n(3905)),a=["components"],l={sidebar_position:1},p="TypeScript",s={unversionedId:"tutorial-extras/typescript",id:"tutorial-extras/typescript",isDocsHomePage:!1,title:"TypeScript",description:"NextShield is designed to be used with TypeScript! you'll get some benefits like:",source:"@site/docs/tutorial-extras/typescript.md",sourceDirName:"tutorial-extras",slug:"/tutorial-extras/typescript",permalink:"/next-shield/docs/tutorial-extras/typescript",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Congratulations!",permalink:"/next-shield/docs/tutorial-basics/congratulations"},next:{title:"RBAC",permalink:"/next-shield/docs/tutorial-extras/RBAC"}},u=[{value:"Translate your project to TS",id:"translate-your-project-to-ts",children:[]}],c={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"typescript"},"TypeScript"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"NextShield")," is designed to be used with TypeScript! you'll get some benefits like:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Enforces you to write the defined routes in the props and nothing more."),(0,i.kt)("li",{parentName:"ul"},"Type check in strings and arrays."),(0,i.kt)("li",{parentName:"ul"},"Accurate autocompletion.")),(0,i.kt)("h2",{id:"translate-your-project-to-ts"},"Translate your project to TS"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Install the TS dependencies: ",(0,i.kt)("inlineCode",{parentName:"li"},"npm install --save-dev typescript @types/react @types/node"),"."),(0,i.kt)("li",{parentName:"ol"},"Create the file ",(0,i.kt)("inlineCode",{parentName:"li"},"tsconfig.json")," in the root folder."),(0,i.kt)("li",{parentName:"ol"},"Rename your file extension to ",(0,i.kt)("inlineCode",{parentName:"li"},"tsx"),"."),(0,i.kt)("li",{parentName:"ol"},"Run the server with ",(0,i.kt)("inlineCode",{parentName:"li"},"npx run dev"),"."),(0,i.kt)("li",{parentName:"ol"},"Now go to ",(0,i.kt)("inlineCode",{parentName:"li"},"_app.tsx")," and add the types to the page:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="pages/_app.tsx"',title:'"pages/_app.tsx"'},"import type { NextPage } from 'next'\nimport type { AppProps } from 'next/app'\n\nconst MyApp: NextPage<AppProps> = ({ Component, pageProps }) => {\n  return (\n    <NextShield\n      isAuth={true}\n      isLoading={false}\n      router={router}\n      privateRoutes={['/private', '/control-panel']}\n      publicRoutes={['/', '/login']}\n      accessRoute=\"/private\"\n      loginRoute=\"/login\"\n      LoadingComponent={<p>Loading...</p>}\n    >\n      <Component {...pageProps} />\n    </NextShield>\n  )\n}\n\nexport default MyApp\n")),(0,i.kt)("ol",{start:6},(0,i.kt)("li",{parentName:"ol"},"I really encourage you to create a new component to configure NextShield, your ",(0,i.kt)("inlineCode",{parentName:"li"},"_app.tsx")," will become a large file in other way. So, create a components directory with a component called ",(0,i.kt)("inlineCode",{parentName:"li"},"Shield.tsx")," or other name you like."),(0,i.kt)("li",{parentName:"ol"},"Import ",(0,i.kt)("inlineCode",{parentName:"li"},"NextShield")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"NextShieldProps")," on that file."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"NextShieldProps")," require to define the public and private routes as generics, the first generic is for private and the second for public routes:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="components/Shield.tsx"',title:'"components/Shield.tsx"'},"const shieldConfig: NextShieldProps<\n    ['/private', '/control-panel'],\n    ['/', '/login']\n  > = {...}\n")),(0,i.kt)("ol",{start:9},(0,i.kt)("li",{parentName:"ol"},"Now you are forced to write the same routes on:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"privateRoutes"),(0,i.kt)("li",{parentName:"ul"},"publicRoutes"),(0,i.kt)("li",{parentName:"ul"},"accessRoute"),(0,i.kt)("li",{parentName:"ul"},"loginRoute"),(0,i.kt)("li",{parentName:"ul"},"RBAC")),(0,i.kt)("ol",{start:10},(0,i.kt)("li",{parentName:"ol"},"The final result should look like this:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="components/Shield.tsx"',title:'"components/Shield.tsx"'},"import { useRouter } from 'next/router'\nimport { NextShield, NextShieldProps } from 'next-shield'\n\nexport function Shield({ children }: Props) {\n  const router = useRouter()\n\n  const shieldConfig: NextShieldProps<['/private', '/control-panel'], ['/', '/login']> = {\n    router,\n    isAuth: true,\n    isLoading: false,\n    LoadingComponent: <p>Loading...</p>,\n    privateRoutes: ['/private', '/control-panel'],\n    publicRoutes: ['/', '/login'],\n    accessRoute: '/private',\n    loginRoute: '/login',\n  }\n\n  return <NextShield {...shieldConfig}>{children}</NextShield>\n}\n")),(0,i.kt)("ol",{start:11},(0,i.kt)("li",{parentName:"ol"},"And import the Shield component in the ",(0,i.kt)("inlineCode",{parentName:"li"},"_app.tsx"),":")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="pages/_app.tsx"',title:'"pages/_app.tsx"'},"import type { NextPage } from 'next'\nimport type { AppProps } from 'next/app'\n\nimport { Shield } from 'components/Shield'\n\n\nconst MyApp: NextPage<AppProps> = ({ Component, pageProps }) => {\n  return (\n    <Shield>\n      <Component {...pageProps} />\n    </Shield>\n  )\n}\n\nexport default MyApp\n")),(0,i.kt)("p",null,"Congrats! You just got type safety code on your Shield. \ud83d\ude09"))}d.isMDXComponent=!0}}]);