"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[156],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return c}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),c=r,m=d["".concat(s,".").concat(c)]||d[c]||h[c]||o;return n?a.createElement(m,i(i({ref:t},u),{},{components:n})):a.createElement(m,i({ref:t},u))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5090:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},assets:function(){return u},toc:function(){return h},default:function(){return c}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={slug:"nextshield-private-routes-and-rbac",title:"RBAC & Private Routes in Next.js using next-shield",author:"@imjulianeral",author_title:"Author of NextShield",author_url:"https://github.com/imjulianeral",author_image_url:"https://avatars.githubusercontent.com/u/41587947?v=4",tags:["examples"]},s="RBAC & Private Routes in Next.js using next-shield.",p={permalink:"/next-shield/blog/nextshield-private-routes-and-rbac",source:"@site/blog/2021-09-28-nextshield-example.md",title:"RBAC & Private Routes in Next.js using next-shield",description:"Protecting routes and hiding features whether the user is authenticated or authorized is a common thing to do nowadays but even so in the react world, it's quite frustrating because the rerenders that React has, which is its normal behavior, but that creates the issue of having flashy content:",date:"2021-09-28T00:00:00.000Z",formattedDate:"September 28, 2021",tags:[{label:"examples",permalink:"/next-shield/blog/tags/examples"}],readingTime:7.685,truncated:!0,authors:[{name:"@imjulianeral",title:"Author of NextShield",url:"https://github.com/imjulianeral",imageURL:"https://avatars.githubusercontent.com/u/41587947?v=4"}],nextItem:{title:"Hello World!",permalink:"/next-shield/blog/hello-world"}},u={authorsImageUrls:[void 0]},h=[{value:"The Solution.",id:"the-solution",children:[{value:"Philosophy.",id:"philosophy",children:[]},{value:"Features.",id:"features",children:[]}]},{value:"NextShield Example.",id:"nextshield-example",children:[{value:"NextShield Setup.",id:"nextshield-setup",children:[]},{value:"Protect the app with NextShield.",id:"protect-the-app-with-nextshield",children:[]},{value:"Create the routes.",id:"create-the-routes",children:[]},{value:"Add RBAC.",id:"add-rbac",children:[]}]},{value:"Next Steps.",id:"next-steps",children:[]}],d={toc:h};function c(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Protecting routes and hiding features whether the ",(0,o.kt)("strong",{parentName:"p"},"user")," is authenticated or authorized is a common thing to do nowadays but even so in the react world, it's quite frustrating because the rerenders that React has, which is its normal behavior, but that creates the issue of having ",(0,o.kt)("strong",{parentName:"p"},"flashy content"),":"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://cdn.hashnode.com/res/hashnode/image/upload/v1632413694415/VIwhYE1BZ.gif",alt:"Peek 2021-09-23 11-13.gif"})),(0,o.kt)("p",null,"This happens because in the first render React read the auth state as ",(0,o.kt)("inlineCode",{parentName:"p"},"null")," Why? because in the first render the API request is not resolved yet, is until the second render when React has completed the request making the change to the state, triggering a rerender but now with the data ",(0,o.kt)("strong",{parentName:"p"},"available"),"."),(0,o.kt)("p",null,"In summary, React is reading the state values before they are ",(0,o.kt)("strong",{parentName:"p"},"available"),", so the only thing that is getting is a ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Glossary/Falsy"},"falsy value"),", that's the problem."),(0,o.kt)("p",null,"So, How can you solve this? There are many solutions, some people handle that on the frontend and implement a ",(0,o.kt)("em",{parentName:"p"},"hacky")," way using ",(0,o.kt)("inlineCode",{parentName:"p"},"windows.location")," or on the backend with Next.js using the ",(0,o.kt)("inlineCode",{parentName:"p"},"getServerSideProps")," method on your pages which has a ",(0,o.kt)("inlineCode",{parentName:"p"},"redirect")," property to force a redirect to another page, and as you know is executed before rendering the page, which is perfect, right? Well... yes but no actually."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://cdn.hashnode.com/res/hashnode/image/upload/v1632415824864/TVwJxmb72.gif",alt:"confused"})),(0,o.kt)("p",null,"If your backend server gets stuck the only thing your user is gonna see is a blank page, because of that you can't give any feedback to your user, not even a spinner, the best solution is still on the frontend, so may you ask \"how can I implement the hacky solution using ",(0,o.kt)("inlineCode",{parentName:"p"},"windows.location"),"?\" I don't recommend that also, so what solution do I recommend?"),(0,o.kt)("h2",{id:"the-solution"},"The Solution."),(0,o.kt)("p",null,"Frameworks like Laravel or Ruby on Rails have this solved, so why a cutting-edge framework like Next.js has not resolved this yet? Well, maybe we never know it, but I crafted my own solution called ",(0,o.kt)("a",{parentName:"p",href:"https://imjulianeral.github.io/next-shield/"},"NextShield"),":"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://cdn.hashnode.com/res/hashnode/image/upload/v1632417104791/PczV3QiWs.png",alt:"logo"})),(0,o.kt)("h3",{id:"philosophy"},"Philosophy."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Never deal with authorization code again."),(0,o.kt)("li",{parentName:"ul"},"Never hardcode a redirect, let your state handle it for you."),(0,o.kt)("li",{parentName:"ul"},"Easy To Use.")),(0,o.kt)("h3",{id:"features"},"Features."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"No Flashy Content."),(0,o.kt)("li",{parentName:"ul"},"RBAC."),(0,o.kt)("li",{parentName:"ul"},"Completely Agnostic.")),(0,o.kt)("p",null,"Let's create a simple example to see the API."),(0,o.kt)("h2",{id:"nextshield-example"},"NextShield Example."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Create a new Next.js app:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npx create-next-app --ts shield-example\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Install NextShield:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npm i next-shield\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Install the spinners:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npm i react-epic-spinners\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Copy the following styles in your styles/globals.css file:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},"* {\n  box-sizing: border-box;\n}\n\nhtml,\nbody {\n  padding: 0;\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell,\n    Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n  background-color: black;\n  color: white;\n}\n\nnav {\n  display: flex;\n  flex-direction: column;\n}\n\n@media (min-width: 768px) {\n  nav {\n    flex-direction: row;\n    justify-content: space-evenly;\n  }\n}\n\na {\n  display: block;\n  text-align: center;\n  text-decoration: none;\n  color: white;\n  padding: 1rem;\n  transition: all ease-in-out 0.3s;\n}\n\na:hover {\n  color: black;\n  background-color: white;\n}\n\nbutton {\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  background-color: white;\n  color: black;\n  border: none;\n  font-weight: 700;\n  font-size: 1.2rem;\n  transition: all ease-in-out 0.3s;\n}\n\nbutton:hover {\n  background-color: #00d1ff;\n  color: white;\n}\n\n.center {\n  height: 40vh;\n  display: grid;\n  place-items: center;\n  text-align: center;\n}\n\n@media (min-width: 768px) {\n  .center {\n    height: 90vh;\n  }\n}\n\n.loading {\n  margin: 40vh auto;\n}\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Add the following types:")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://cdn.hashnode.com/res/hashnode/image/upload/v1632418919919/C09y6I4j0.png",alt:"image.png"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"// Components.ts\n\nimport type { ReactNode } from 'react'\n\nexport interface Children {\n  children: ReactNode;\n}\n\nexport type LayoutProps = {\n  title: string,\n} & Children\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"// User.ts\n\nexport interface Profile {\n  id: string\n  name: string\n  role: string\n}\n\n\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Create the Nav Component:")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://cdn.hashnode.com/res/hashnode/image/upload/v1632418727457/eGrL9Aut0.png",alt:"image.png"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'import Link from \'next/link\'\n\nexport function Nav() {\n  return (\n    <nav>\n      <Link href="/">\n        <a>Home</a>\n      </Link>\n      <Link href="/login">\n        <a>Login</a>\n      </Link>\n      <Link href="/pricing">\n        <a>Pricing</a>\n      </Link>\n      <Link href="/profile">\n        <a>Profile</a>\n      </Link>\n      <Link href="/dashboard">\n        <a>Dashboard</a>\n      </Link>\n      <Link href="/users">\n        <a>Users</a>\n      </Link>\n      <Link href="/users/1">\n        <a>Single User</a>\n      </Link>\n    </nav>\n  )\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Add The following components:")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://cdn.hashnode.com/res/hashnode/image/upload/v1632418141135/QnsMHR0sE.png",alt:"image.png"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'// Layout.tsx\n\nimport Head from \'next/head\'\nimport { LayoutProps } from \'@/types/Components\'\nimport { Nav } from \'../ui/Nav\'\n\nexport function Layout({ children, title }: LayoutProps) {\n  return (\n    <>\n      <Head>\n        <title>NextShield | {title}</title>\n        <meta name="description" content="NextShield Example with Firebase" />\n        <link rel="icon" href="/favicon.ico" />\n      </Head>\n\n      <Nav />\n      <div className="center">\n        <main>{children}</main>\n      </div>\n    </>\n  )\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'// Loading.tsx\n\nimport { BreedingRhombusSpinner } from \'react-epic-spinners\'\n\nexport function Loading() {\n  return <BreedingRhombusSpinner color="#00d1ff" className="loading" />\n}\n')),(0,o.kt)("p",null,"And finally the ",(0,o.kt)("inlineCode",{parentName:"p"},"NextShield")," setup."),(0,o.kt)("h3",{id:"nextshield-setup"},"NextShield Setup."),(0,o.kt)("p",null,"In ",(0,o.kt)("inlineCode",{parentName:"p"},"Shield.tsx")," file import the ",(0,o.kt)("inlineCode",{parentName:"p"},"useRouter"),", the ",(0,o.kt)("inlineCode",{parentName:"p"},"Loading.tsx")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"next-shield"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useRouter } from 'next/router'\nimport { NextShield, NextShieldProps } from 'next-shield'\n\nimport { Children } from '@/types/Components'\nimport { Loading } from './Loading'\n\nexport function Shield({ children }: Children) {\n  const router = useRouter()\n\n  return <>{children}</>\n}\n")),(0,o.kt)("p",null,"Just after the router create an object implementing the ",(0,o.kt)("inlineCode",{parentName:"p"},"NextShieldProps")," called ",(0,o.kt)("inlineCode",{parentName:"p"},"shieldProps"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"const shieldProps: NextShieldProps = {}\n")),(0,o.kt)("p",null,"You need to pass some generics to the type, the first one is an array of the private routes of your application, and the second one is an array with the public routes:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"const shieldProps: NextShieldProps<\n  ['/profile', '/dashboard', '/users', '/users/[id]'],\n  ['/', '/login']\n> = {}\n")),(0,o.kt)("p",null,"Then you need to pass the following ",(0,o.kt)("strong",{parentName:"p"},"props"),":"),(0,o.kt)("h4",{id:"router"},"Router."),(0,o.kt)("p",null,"\u21c6 Instance of your router."),(0,o.kt)("h4",{id:"isauth"},"isAuth."),(0,o.kt)("p",null,"\ud83d\udd11 This value must be provided by the state of your app. Indicates if the user is authenticated or not."),(0,o.kt)("h4",{id:"isloading"},"isLoading."),(0,o.kt)("p",null,"\u23f3 This value must be provided by the state of your app. Indicates if the user's data is already available or not."),(0,o.kt)("h4",{id:"privateroutes"},"privateRoutes."),(0,o.kt)("p",null,"\ud83d\udea7 \ud83d\udea7 \ud83d\udea7 Array of private routes. These are only accessible when the user is authenticated."),(0,o.kt)("h4",{id:"publicroutes"},"publicRoutes."),(0,o.kt)("p",null,"\ud83d\udc40 \ud83d\udc40 \ud83d\udc40 Array of public routes. These are only accessible when the user is ",(0,o.kt)("strong",{parentName:"p"},"NOT")," authenticated."),(0,o.kt)("h4",{id:"hybridroutes"},"hybridRoutes."),(0,o.kt)("p",null,"\ud83d\udea6\ud83d\udea6\ud83d\udea6 Array of hybrid routes. These are always accessible; doesn't matter the auth state."),(0,o.kt)("h4",{id:"loginroute"},"loginRoute."),(0,o.kt)("p",null,"\ud83d\udccb Login page. Must be a public route."),(0,o.kt)("h4",{id:"accessroute"},"accessRoute."),(0,o.kt)("p",null,"\ud83d\udea7 Route where your user is going to access after login. Must be a private route."),(0,o.kt)("h4",{id:"loadingcomponent"},"LoadingComponent."),(0,o.kt)("p",null,"\ud83c\udf00 React Component which is going to appear when isLoading equals to true."),(0,o.kt)("p",null,"These are going to be the values, for this example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"const shieldProps: NextShieldProps<\n    ['/profile', '/dashboard', '/users', '/users/[id]'],\n    ['/', '/login']\n  > = {\n    router,\n    isAuth: false,\n    isLoading: false,\n    privateRoutes: ['/profile', '/dashboard', '/users', '/users/[id]'],\n    publicRoutes: ['/', '/login'],\n    hybridRoutes: ['/pricing'],\n    loginRoute: '/login',\n    accessRoute: '/profile'\n    LoadingComponent: <Loading />,\n  }\n")),(0,o.kt)("h3",{id:"protect-the-app-with-nextshield"},"Protect the app with NextShield."),(0,o.kt)("p",null,"Go to the ",(0,o.kt)("inlineCode",{parentName:"p"},"_app.tsx")," file and wrap it with the ",(0,o.kt)("inlineCode",{parentName:"p"},"Shield")," component:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import type { AppProps } from 'next/app'\n\nimport { Shield } from '@/components/routes/Shield'\n\nimport '@/styles/globals.css'\n\nexport default function MyApp({ Component, pageProps }: AppProps) {\n  return (\n    <Shield>\n      <Component {...pageProps} />\n    </Shield>\n  )\n}\n")),(0,o.kt)("h3",{id:"create-the-routes"},"Create the routes."),(0,o.kt)("p",null,"Create the following routes:"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://cdn.hashnode.com/res/hashnode/image/upload/v1632874410380/L8R_UQ5llR.png",alt:"routes"})),(0,o.kt)("p",null,"And write in each of them the following content:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Layout } from '@/components/routes/Layout'\n\nexport default function PageName() {\n  return (\n    <Layout title=\"PageName\">\n      <h1>PageName</h1>\n    </Layout>\n  )\n}\n")),(0,o.kt)("p",null,"By now you must have something like this:"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://cdn.hashnode.com/res/hashnode/image/upload/v1632875019492/uV_jqaamy.gif",alt:"Peek 2021-09-28 19-23.gif"})),(0,o.kt)("p",null,"As you can see, you can only access the public & hybrid routes, your private routes are completely protected, Even if you see your history the private routes won't appear:"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://cdn.hashnode.com/res/hashnode/image/upload/v1632875342519/YORABi2bl.png",alt:"image.png"})),(0,o.kt)("p",null,"Now you can play and set ",(0,o.kt)("inlineCode",{parentName:"p"},"isAuth: true"),", you immediately won't be able to access the public routes."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://cdn.hashnode.com/res/hashnode/image/upload/v1632876260602/W3sUaouse.gif",alt:"mind blown"})),(0,o.kt)("h3",{id:"add-rbac"},"Add RBAC."),(0,o.kt)("p",null,"Fine, you just got a simple example with auth users, now let's add something more interesting."),(0,o.kt)("p",null,"To add RBAC you need to pass the prop called ",(0,o.kt)("inlineCode",{parentName:"p"},"RBAC")," as an object with the following configuration:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"RBAC: {\n      ADMIN: {\n        grantedRoutes: ['/dashboard', '/profile', '/users', '/users/[id]'],\n        accessRoute: '/dashboard',\n      },\n      EMPLOYEE: {\n        grantedRoutes: ['/profile', '/dashboard'],\n        accessRoute: '/profile',\n      },\n},\n")),(0,o.kt)("p",null,"As you can see you define the roles of your app in the object keys, and inside you must define the ",(0,o.kt)("inlineCode",{parentName:"p"},"grantedRoutes")," which is an array with the routes that are going to be accessible for that role, also you must define the ",(0,o.kt)("inlineCode",{parentName:"p"},"accessRoute")," inside of this object ",(0,o.kt)("strong",{parentName:"p"},"and remove it from outside"),"."),(0,o.kt)("p",null,"After that, you must pass the prop called ",(0,o.kt)("inlineCode",{parentName:"p"},"userRole"),", which is the role of the current auth user, this must match with the object keys in ",(0,o.kt)("inlineCode",{parentName:"p"},"RBAC"),", also this prop needs to be undefined when ",(0,o.kt)("inlineCode",{parentName:"p"},"isAuth")," is false and defined when is true."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"userRole: 'ADMIN', // Must be undefined when isAuth is false & defined when is true\n")),(0,o.kt)("p",null,"The end result should look like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const shieldProps: NextShieldProps<\n  ['/profile', '/dashboard', '/users', '/users/[id]'],\n  ['/', '/login']\n> = {\n  router,\n  isAuth: true,\n  isLoading: false,\n  privateRoutes: ['/profile', '/dashboard', '/users', '/users/[id]'],\n  publicRoutes: ['/', '/login'],\n  hybridRoutes: ['/pricing'],\n  loginRoute: '/login',\n  LoadingComponent: <Loading />,\n  RBAC: {\n    ADMIN: {\n      grantedRoutes: ['/dashboard', '/profile', '/users', '/users/[id]'],\n      accessRoute: '/dashboard',\n    },\n    EMPLOYEE: {\n      grantedRoutes: ['/profile', '/dashboard'],\n      accessRoute: '/profile',\n    },\n  },\n  userRole: 'ADMIN', // Must be undefined when isAuth is false & defined when is true\n}\n")),(0,o.kt)("p",null,"And that's it! You will get the same behavior as before:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Unable to access ungranted routes."),(0,o.kt)("li",{parentName:"ul"},"No trace on your history."),(0,o.kt)("li",{parentName:"ul"},"0 flashy content, the LoadingComponent will always intercept the request before showing the page or redirecting the user."),(0,o.kt)("li",{parentName:"ul"},"Configure everything in one place.")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://cdn.hashnode.com/res/hashnode/image/upload/v1632882692044/7LUO8Gupe.gif",alt:"magikarp guy"})),(0,o.kt)("h2",{id:"next-steps"},"Next Steps."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://imjulianeral.github.io/next-shield/"},"Read the docs"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/imjulianeral/nextshield-examples"},"See the complete example on the repo (main branch)")),(0,o.kt)("li",{parentName:"ul"},"Use it with your preferred auth provider."),(0,o.kt)("li",{parentName:"ul"},"Use ",(0,o.kt)("a",{parentName:"li",href:"https://imjulianeral.github.io/next-shield/docs/protect-components/ComponentShield"},"ComponentShield")," to get more control of what is displayed on the screen."),(0,o.kt)("li",{parentName:"ul"},"Wait for the following Examples!")))}c.isMDXComponent=!0}}]);